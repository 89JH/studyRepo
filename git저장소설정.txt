git 프로젝트 시작

1.git 설치
git은 알아서..설치..^^.

2.git 버전확인
	$git --version

3.콘솔에서 사용자, 이메일등 설정
	$git config --global user.name "<사용자명>"
	$git config --global user.email "<메일주소>"

4.git의 출력 메세지 색상 설정(이게 어디에 사용되는지 모르겠다;;)
	$git config --global color.ui auto

5.git은 명렁어로 alias를 설정할 수있다.(아래는 checkout을 co로 생략해도 실행할 수 있게 설정하는 부분 안해도 상관없다.)
	$git config --global alias.co checkout

6.Windows에서 Git Bash를 사용하는 경우 한국어를 포함하는 파일명이 이상하게 표현이 되는데,
아래 설정을 추가하면 한국어를 포함한 파일명도 올바르게 표시된다고함(신기)
	$git config --global core.quotepath off

또한 Windows에서 콘솔을 이용하는 경우, 한국어를 입력할 수 없기 때문에 커밋 메시지에서 한국어를 사용하는 경우 
'-m' 옵션 대신 외부 에디터를 이용해야 합니다. 사용하는 외부 에디터는 문자 코드 'UTF-8', 라인 피드 코드 'LF'와 호환되어야 합니다.
	$git config --global core.editor "\"[사용할 에디터의 경로]\""
	
7.저장소 생성(로컬)원하는 위치에 저장소 생성
저장소 생성 후 해당 저장소로 이동
ex) cd d:\repository\

8.git 저장소 등록
	$git init
	Initialized empty Git repository in /Users/yourname/Desktop/tutorial/.git/

9.git 저장소 상태 확인
	$git status
	
10.파일 등록( $git add <file>..) / <file>대신에 .을 지정하면 모든 파일을 등록함
폴더/파일등이 변경되면 다시 add를 해주어야 한다.
	$git add .

11.파일등록 후 git status로 폴더/파일 상태확인

12.폴더/파일 commit( $git commit -m "<커밋설명>") -m이 무엇일까?
	$git commit -m "첫번째커밋"
	
13.변경이력확인
	$git log
	
14.git을 설치할때 gitk라는 툴도 동시에 설치가된다. 이걸 이용하면 변경이력을 GUI에서 확인할 수 있다.. 하지만 한글이 깨진다..
	$gitk
	
15.원격저장소에 내 저장소 업로드하기(push) - push = 업로드
	내 pc에서 변경된 내용이 있으면 원격 저장소에 업로드해야 한다. 업로드 하는 것을 push라고 한다.
	***add, commit후에 push해주어야 한다.
	
16.원격저장소 복제하기 변경이력도 다 복제된다(clone) - clone = svn에서 checkout이라고 생각하면 될것같다.

17.원격저장소에서 업데이트 받기(pull) - pull = svn에서 update라고 생각하면 될것같다.

18.Github에 원격 저장소 생성
이부분도 알아서..^^;

19.15번에서 설명한 원격저장소에 내 로컬에있는 repository 업로드하기(push)

19-1.원격 저장소 주소 설정
원격 저장소의 주소는 이름으로 기억해둘수 있다(alias). 기록해두면 긴 url주소를 입력할 필요가 없다.
아래는 push하기 전 원격 저장소의 경로를 먼저 지정하는 부분이다.
문법은( $git remote add <name(alias)> <url>
	$git remote add <as명> <원격저장소경로>
	
19-2.push (문법 $git push <저장소 as명 혹은 주소> <브랜치(맨처음은 master)>
	$git push -u <저장소> <브랜치명>
위에서 -u를 한번 지정하면 다음부터는 브랜치명 지정을 생략할 수있다. 단, 최로로 push했을 때는 원격저장소명과 브랜치명을 생략할 수 없다.

여기까지하면 내 로컬에 있는 저장소를 원격 저장소로 업로드(push) 하는 것 까지 성공~~
여기까지 정리하자면
폴더/파일 생성 및 수정 - add - commit - push 이다.(원격 저장소와 기본적인 세팅이 다 되어 있는 경우)
	
20.16번에서 설명한 원격저장소에 있는 프로젝트를 다른 pc에 복사하기(clone) - 프로젝트가 해당 pc에 존재하지 않을때

20-1.clone (문법 $git clone <원격저장소주소> <프로젝트명(로컬저장소명)>
	$git clone <저장소주소> <프로젝트명(생략가능)> ->프로젝트명을 생략하면 원격저장소에 있는 프로젝트명으로 폴더가 생성된다.

21.17번에서 설명한 원격저장소 업데이트 받기(pull) - 프로젝트를 clone 받아왔을때(프로젝트가 존재할때)

21-1.pull (문법 $git pull <원격저장소경로> <브랜치명>)
	$git pull <원격저장소경로> <브랜치명>
<원격저장소경로>는 git remote 명령어를 사용하여 확인할 수 있다. 생략도 가능한데 생략하게 되면 기본원격저장소경로(origin)로 지정된
폴더를 pull 하는것 같다.
<브랜치명>도 생략하면 master브랜치를 자동으로 pull 해오는 것 같다.

22.변경 이력 병합하기(merge)
내가 가져온 저장소가 최신이 아닐경우, 내가 update(pull)을 받고나서, 다른사람이 commit(push)해서 저장소를 업데이트한 경우에는
충돌이 일어나게 된다(내가 수정하고 commit(push)하면 요청이 거부된다).
이럴때 사용하는게 병합(merge) - 다른 사람이 commit(push)한 내용을 내저장소에 반영하는 것 같다.
merge를 하게되면 git이 현재 브런치에 자동으로 알아서 변경사항을 통합해준다고함.

23.충돌을 수동으로 해결할때에는 파일을 열어서 확인해보면
<<<<<<<<<<
내용
==========
변경된내용
>>>>>>>>>>
위와 같이 감싸져있는 부분이 충돌난 부분이다. ======== 경계로 윗 부분이 로컬저장소, 아랫부분이 원격 저장소의 변경된 내용이다.
저 부분을 수동으로 수정(충돌 난 부분은 직접 수정해야 한다.)한 다음에 commit - push 진행하면 된다.

=======
	